""""
=======================================================================================================================================================================
                                                  Brute Force Approach
=======================================================================================================================================================================
"""
class Solution:
    def mirrorReflection(self, p: int, q: int) -> int:
        a = p
        b = q
        while (a%2 == 0 and b%2 == 0):
            a = a//2
            b = b//2
        if (b%2 == 0 and a%2 != 0):
            return 0
        elif (b%2 == 1 and a%2 == 0):
            return 2
        elif (b%2 == 1 and a%2 != 0):
            return 1
        return -1     
        
        
"""
=======================================================================================================================================================================
                                                      Maths Optimized Approach with LCM
=======================================================================================================================================================================
"""
class Solution:
    def mirrorReflection(self, p: int, q: int) -> int:
        def gcd(a,b):
            while b:
                a = a%b
                a,b = b,a
            return a
        lcm = (p*q)//gcd(p,q)
        m = lcm//p
        n = lcm//q
        if(m%2==0 and n%2==1):
            return 0
        if(m%2==1 and n%2==1):
            return 1
        if(m%2==1 and n%2==0):
            return 2
        return -1
